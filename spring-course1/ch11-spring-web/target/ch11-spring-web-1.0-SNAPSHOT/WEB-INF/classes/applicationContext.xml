<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
 ">
   <!---->
   <context:property-placeholder location="classpath:jdbc.properties"/>
   <!--声明数据源DataSource , 作用是连接数据库的-->
   <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
         init-method="init" destroy-method="close">
      <!--set注入给DruidDataSource提供连接数据库信息-->
      <property name="url" value="${jdbc.url}"/> <!--setUrl()-->
      <property name="username" value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
      <property name="maxActive" value="${jdbc.maxAt}"/>
   </bean>

   <!--声明的是mybatis中提供的sqlSessionFactoryBean-->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <!--set注入 , 捌数据库连接池赋给DataSource属性-->
      <property name="dataSource" ref="myDataSource"/>
      <!--mybatis主配置文件的位置
         configLocation属性是Resource类型 , 读取配置文件
         他的赋值 , 使用value , 指定文件的路径 , 使用classpath:表示文件的位置
      -->
      <property name="configLocation" value="classpath:mybatis.xml"/>
   </bean>

   <!--创建dao对象 , 使用SqlSession的getMapper(StudentDao.class)-->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <!--指定SqlSessionFactory对象的id-->
      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
      <!--指定包名 , 包名是dao接口所在的包名.
          MapperScannerConfigurer会扫描这个包中的所有接口 , 捌每个接口都执行一次
          getMapper()方法 , 得到每个接口的到对象.
          创建好的dao对象放入非spring的容器中的. (如果多个包可以用" , "分隔开)
          dao对象的默认名称是 接口名首字母小写.
      -->
      <property name="basePackage" value="com.lypowernode.dao"/>
   </bean>
   <bean id="studentService" class="com.lypowernode.service.impl.StudentServiceImpl">
      <property name="studentDao" ref="studentDao"/>
   </bean>
</beans>
